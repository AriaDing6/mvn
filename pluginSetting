# mvn插件配置

-D参数 加上一个参数键=参数值的形式，可以配置插件目标的参数

# 命令行插件配置
- maven.test.skip参数是由maven-surefire-plugin提供的，为true就会跳过执行测试，如下：
``
mvn install -Dmaven.test.skip=true
``

# POM中插件全局配置
- maven-complie-plugin，在POM中一次性配置能保证在任何阶段都能使用该配置
具体用法：
``
<plugin>  
    <groupId>org.apache.maven.plugins</groupId>  
    <artifactId>maven-compiler-plugin</artifactId>  
    <version>3.5.1</version>  
    <configuration>  
        <source>1.7</source> <!-- 源代码使用的开发版本 -->  
        <target>1.7</target> <!-- 需要生成的目标class文件的编译版本 -->  
        <!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->  

        <!-- 这下面的是可选项 -->  
        <meminitial>128m</meminitial>  
        <maxmem>512m</maxmem>  
        <fork>true</fork> <!-- fork is enable,用于明确表示编译版本配置的可用 -->   
        <compilerVersion>1.3</compilerVersion>  

        <!-- 这个选项用来传递编译器自身不包含但是却支持的参数选项 -->  
        <compilerArgument>-verbose -bootclasspath ${java.home}\lib\rt.jar</compilerArgument>  
    </configuration>  
</plugin> 
``
# POM中插件任务配置
- 可以对不同阶段绑定不同的任务，如maven-antrun-plugin:run和validate阶段绑定，从而构成一个id为ant-validate的任务
- 具体用法：
``
<plugin>  
    <groupId>org.apache.maven.plugins</groupId>  
    <artifactId>maven-antrun-plugin</artifactId>  
    <version>1.3</version>  
    <executions>
        <execution>
            <id>ant-validate</id>
            <phase>validate</phase>
            <goals>
                <goal>run<goal>
            </goals>
            <configuration>
                <tasks>
                    <echo>I'm bound to validate phase</echo>
                </tasks>
            </configuration>
        <execution>
    </executions>
</plugin> 
``

--7.5
